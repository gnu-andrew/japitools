* For 0.8.3:
  * Verify results of new japicompat against old
  * Print at least *some* kind of overall summary information at end
  * Update docs
* For 0.8.4:
  * Oops! Fix hang-at-end bug!
- For 0.8.5:
  * Better summary information
  * Update file version format to 0.9
  * Put the whole of java.lang first along with Object
  * Make japi2new support new version
  * Make japize generate the new version
  * Support "unzip" option in japize and require that either it or zip be
    specified. This is a precursor to making zipped output the default; in the
    next release, "zip" will be a no-op. Requiring the option for one release
    at least makes sure that people are aware that something changed...
  * Update webpage to describe zip/unzip option and rationale, with note that
    "zip" is going away.
  * Make japi2new work something like gzip/gunzip, replacing the original
    unless otherwise specified. Make it work with gzipped input and produce
    gzipped output (by default, but turn-offable).
  * Test japize at least a little bit!
  * Figure out why japize is screwing up the ordering and fix it. Perhaps
    put jdk1.1/classes.zip onto laptop so I can work with it.
  * Get japize to reliably get constants, by ensuring that nothing will get
    unloaded until there are no references to the JodeClass. "Anything can be
    solved by another layer of indirection".
  * Teach japicompat that constructors don't inherit, so don't filter out
    problems "inherited" from a superclass constructor.
  * Test japize on jdk1.1 classes.zip (again) and make sure output is equivalent
    or better than the best I've gotten so far.
  - Test japicompat again against japicompat-old for new jdk1.1.japi vs
    kaffe.japi from Dalibor.
  * Distribute as a tarball rather than a jarball, so permissions flags on the
    things in 'bin' are preserved.
- For 0.9.0:
  - Make japi2new catch misordered files of versions that are expected to be
    ordered and fix them up. Essentially it should abort and restart with the
    'sortneeded' flag set to true.
  - Make japifix continue with the next file on an error.
  - Make japifix clean up its temporary files on an error.
  - Make zipped output the silent default in japize, with "zip" a no-op. "unzip"
    explicitly would turn off the zipping.
  - Any bug fixes reported in 0.8.4/5
  - This is intended as a vaguely stable milestone before everything breaks
    again.
- For 0.9.1:
  - Output in raw mode by default (suggest .japio as file ext). Add a version
    to japio files similar to that in japi files.
  - Put all summary information into the japio somehow to allow it to appear in
    the results files.
  - japiotext, japiohtml filter programs
  - "-h" and "-t" flags to japicompat will pipe to the relevant program
  - Remove "zip" no-op option as useless cruft.
  - Remove reflection support - there's no use case for it and it's useless
    generality. Keep the generality in case something better than Jode comes
    along, but "it's generalized!" is no excuse for keeping broken code.
- For 0.9.2:
  - Optional new argument syntax to japicompat:
    - "-a file.japio" and "-f file.japio" will add or filter based on existing
      japio files.
    - Instead of a filename, "@file1.japi:file2.japi" (both ".japi" and ".gz"
      are optional) passed to -a or -f will dynamically compare the japis and
      apply the filters.
    - japicompat file1 file2 is equivalent to japicompat -a @file1:file2 (and
      other -a and -f args are still allowed).
  - Test by generating jdkxx-jdkyy.japio for all yy > xx and then compare kaffe
    to jdkxx filtering out all those japios.
- For 0.9.3:
  - Fallout from 0.9.2, since it's a big change and will probably break stuff,
    including its own new functionality.
  - Anything else needed by kaffe or any other free java project for creating
    nightly results output.
  - This is 1.0 "release candidate"
  - ?? bump file format version to 1.0 with no changes? Or perhaps support
    international chars and bump the version that way?
- For 0.9.4:
  - If there's any fallout from 0.9.3, do a second release candidate. Otherwise
    skip this and go straight to 1.0.
- For 1.0.0:
  - Minor bugfixes only.
  - Do 1.0.x releases for other minor bugfixes.
- For 1.1.0:
  - New file format version
  - Deprecation support
