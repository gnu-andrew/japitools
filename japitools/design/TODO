- For 0.8.3:
  * Verify results of new japicompat against old
  * Print at least *some* kind of overall summary information at end
  * Update docs
- For 0.8.4:
  * Oops! Fix hang-at-end bug!
- For 0.8.5:
  - Better summary information
  - Update file version format to 0.9
  - Put the whole of java.lang first along with Object
  - Make japi2new support new version
- For 0.9.0:
  - Any bug fixes reported in 0.8.4
  - This is intended as a vaguely stable milestone before everything breaks
    again.
- For 0.9.1:
  - Output in raw mode by default (suggest .japio as file ext)
  - japiotext, japiohtml filter programs
  - "-h" and "-t" flags to japicompat will pipe to the relevant program
- For 0.9.2:
  - Optional new argument syntax to japicompat:
    - "-a file.japio" and "-f file.japio" will add or filter based on existing
      japio files.
    - Instead of a filename, "@file1.japi:file2.japi" (both ".japi" and ".gz"
      are optional) passed to -a or -f will dynamically compare the japis and
      apply the filters.
    - japicompat file1 file2 is equivalent to japicompat -a @file1:file2 (and
      other -a and -f args are still allowed).
  - Test by generating jdkxx-jdkyy.japio for all yy > xx and then compare kaffe
    to jdkxx filtering out all those japios.
- For 0.9.3:
  - Fallout from 0.9.2, since it's a big change and will probably break stuff,
    including its own new functionality.
  - Anything else needed by kaffe or any other free java project for creating
    nightly results output.
  - This is 1.0 "release candidate"
  - ?? bump file format version to 1.0 with no changes? Or perhaps support
    international chars and bump the version that way?
- For 0.9.4:
  - If there's any fallout from 0.9.3, do a second release candidate. Otherwise
    skip this and go straight to 1.0.
- For 1.0.0:
  - Minor bugfixes only.
  - Do 1.0.x releases for other minor bugfixes.
- For 1.1.0:
  - New file format version
  - Deprecation support
