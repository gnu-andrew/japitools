* For 0.8.3:
  * Verify results of new japicompat against old
  * Print at least *some* kind of overall summary information at end
  * Update docs
* For 0.8.4:
  * Oops! Fix hang-at-end bug!
* For 0.8.5:
  * Better summary information
  * Update file version format to 0.9
  * Put the whole of java.lang first along with Object
  * Make japi2new support new version
  * Make japize generate the new version
  * Support "unzip" option in japize and require that either it or zip be
    specified. This is a precursor to making zipped output the default; in the
    next release, "zip" will be a no-op. Requiring the option for one release
    at least makes sure that people are aware that something changed...
  * Update webpage to describe zip/unzip option and rationale, with note that
    "zip" is going away.
  * Make japi2new work something like gzip/gunzip, replacing the original
    unless otherwise specified. Make it work with gzipped input and produce
    gzipped output (by default, but turn-offable).
  * Rename japi2new to japifix.
  * Make japifix abort with an error on mis-ordered files. Support a -s option
    to force a sort in such situations.
  * Test japize at least a little bit!
  * Figure out why japize is screwing up the ordering and fix it. Perhaps
    put jdk1.1/classes.zip onto laptop so I can work with it.
  * Get japize to reliably get constants, by ensuring that nothing will get
    unloaded until there are no references to the JodeClass. "Anything can be
    solved by another layer of indirection".
  * Teach japicompat that constructors don't inherit, so don't filter out
    problems "inherited" from a superclass constructor.
  * Test japize on jdk1.1 classes.zip (again) and make sure output is equivalent
    or better than the best I've gotten so far.
  * Test japicompat again against japicompat-old for new jdk1.1.japi vs
    kaffe.japi from Dalibor.
  * Distribute as a tarball rather than a jarball, so permissions flags on the
    things in 'bin' are preserved.
* For 0.8.6:
  * Make tarball include 'japi' directory rather than just its contents.
  * Make zipped output the silent default in japize, with "zip" a no-op. "unzip"
    explicitly will turn off the zipping.
  * Remove reflection support.
  * Remove japicompat-old.
  * Put japitools.jar in japi/share/java, and put jode.jar there too.
  * Make japize figure out location of *.jar from $0 (../share/java rel path)
  * Use "!" instead of "%" so that it sorts before "$", making the order
    correct for inner classes.
    * Change japize to output "!" and japiver 0.9.1
    * Change japicompat to recognize "!" and japiver 0.9.1
    * Change japipkgs to recognize 0.9.1
    * Change japifix to convert to "!" and 0.9.1
  * Test japize on jdk1.1
  * Test japifix on old jdk1.1 japis
  * Test japifix on old kaffe japis (to ensure that the ordering of inner
    classes is right)
  * Test japicompat between jdk1.1 and kaffe, as usual.
- For 0.9:
  - Make japifix catch misordered files of versions that are expected to be
    ordered and fix them up. Essentially it should abort and restart with the
    'sortneeded' flag set to true.
    - Use new_tmpfile (like japicompat does) if output is to stdout
    - Don't set needtosort based on japi version at all. Rather, always print
      all output, but test sortedness as we go and set needtosort if we
      encounter a mis-sorted item.
    - When we get to the end, if needtosort is set, rename the .new file to
      .unsorted, read it in, sort it, and dump it out to .new (or stdout, if
      appropriate). If needtosort *isn't* set, just leave the new file alone.
    - *then* move .new over the orig, like we do now.
    - so mis-sorting isn't an error, just a flag.
  - Make japifix continue with the next file on an error.
  - Make japifix clean up its temporary files on an error.
  - Any bug fixes reported in 0.8.6
  - This is intended as a vaguely stable milestone before everything breaks
    again.
- For 0.9.1:
  - Output in raw mode by default (suggest .japio as file ext). Add a version
    to japio files similar to that in japi files.
  - Put all summary information into the japio somehow to allow it to appear in
    the results files.
  - japiotext, japiohtml filter programs
  - "-h" and "-t" flags to japicompat will pipe to the relevant program
  - Remove "zip" no-op option as useless cruft.
  - ./configure;make;make install?
  - Deprecation support (it's an error to *un*deprecate an API...)
  - Convert all non-"a-zA-Z0-9_$" characters in class and method names into
    "\uXXXX". Do the same with characters in constant strings, only use a wider
    range (eg everything in the ascii charset from space to the end).
- For 0.9.2:
  - Optional new argument syntax to japicompat:
    - "-a file.japio" and "-f file.japio" will add or filter based on existing
      japio files.
    - Instead of a filename, "@file1.japi:file2.japi" (both ".japi" and ".gz"
      are optional) passed to -a or -f will dynamically compare the japis and
      apply the filters.
    - japicompat file1 file2 is equivalent to japicompat -a @file1:file2 (and
      other -a and -f args are still allowed).
  - Test by generating jdkxx-jdkyy.japio for all yy > xx and then compare kaffe
    to jdkxx filtering out all those japios.
- For 0.9.3:
  - Fallout from 0.9.2, since it's a big change and will probably break stuff,
    including its own new functionality.
  - Anything else needed by kaffe or any other free java project for creating
    nightly results output.
  - This is 1.0 "release candidate"
  - ?? bump file format version to 1.0 with no changes?
- For 0.9.4:
  - If there's any fallout from 0.9.3, do a second release candidate. Otherwise
    skip this and go straight to 1.0.
- For 1.0.0:
  - Minor bugfixes only.
  - Do 1.0.x releases for other (hopefully minor) bugfixes.
- For 1.1 etc:
  - New features, if I can think of any (everything I've thought of so far is
    on the roadmap for 1.0...)
