#!/usr/bin/perl -w
###############################################################################
# japiotext - Convert japicompat output to human-readable text format.
# Copyright (C) 2000-2002  Stuart Ballard <sballard@netreach.net>
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
###############################################################################

## GLOBAL VARIABLES ##

# Some global variables used for displaying stuff.
$japiover = "0.9.1";

# Requirements
use IO::Handle;

my $verline = <>;
chomp $verline;
($filever, $orig, $new) = ($1, $2, $3)
    if $verline =~ /^%\%japio ([^ ]+) ([^ ]+) ([^ ]+)(?: .*)?$/;
unless (defined $filever) {
  print STDERR <<EOF;
This does not look like a japio file.
EOF
  exit 1;
}
if ($filever ne $japiover) {
  print STDERR <<EOF;
This japio file claims to be version $filever, but this version of japiotext
only supports version $japiover.
EOF
  exit 1;
}

print "Results of comparison between $orig and $new:\n\n";

while (<>) {
  chomp;
  if (/^categories (.*)$/) {
    # nothing to do...
  } elsif (/^rawsummary (.*)$/) {
    my @bits = split / /, $1;
    my ($extra, $total, $values) = ({}, 0, {});
    my $pkg = shift @bits;
    foreach my $bit (@bits) {
      my ($plus, $key, $value) = ($1, $2, $3)
        if $bit =~ /^(\+?)([^:+]+):([0-9]+)$/;
      if ($plus) {
        $extra->{$key} = $value + 0;
      } else {
        $total += $value;
        $values->{$key} = $value + 0;
      }
    }
    my $pkgn = $pkg;
    if ($pkg eq "#") {
      print "\n";
      $pkgn = "Total";
    } elsif ($pkg =~ /^#(.)(.*)$/) {
      $pkgn = uc($1) . $2;
      $pkgn .= "e" if $pkgn =~ /[sx]$/;
      $pkgn .= "s";
    }
    my $pcts = "";
    foreach my $key (keys %$values) {
      $pcts .= ", " if $pcts;
      $pcts .= (int($values->{$key} * 10000 / $total)/100) . "% $key";
    }
    foreach my $key (keys %$extra) {
      $pcts .= ", " if $pcts;
      $pcts .= (int($extra->{$key} * 10000 / $total)/100) . "% $key";
    }
    print "$pkgn: $pcts\n";
  } elsif (/^error (.*)$/) {
    my ($etype, $isa, $item, $sups, $rest) = split / /, $1, 5;
    my ($was, $is) = split /\//, $rest;
    $etype =~ s/\./-/g;
    my $msg = $was ? " $was in $orig, but" : "";
    print "$isa $item:$msg $is in $new\n";
  } else {
    die "Line not understood in japio file:\n$_";
  }
}
exit 0;
